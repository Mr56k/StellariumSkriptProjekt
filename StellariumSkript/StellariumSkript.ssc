/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Author: Tobias Feigel
// Version: 1.0
// License: Public Domain
// Name: Template for generation own Stellarium Script Workplaces
// Description: A template generated for the workshop at public observatory Hof at September, 28th 2019.
// Based on the work of Ingo Berg: https://beltoforion.de/ - Thank you, Ingo!
Object.defineProperty(exports, "__esModule", { value: true });
var Strings_1 = __webpack_require__(1);
// Enter Coordinates of Location
var param_lat = 50.0;
var param_long = 12.0;
// Definitions for strings
var strings;
// Setup Stellarium as wanted
function setup() {
    // Wait to work around #491 
    // (https://github.com/Stellarium/stellarium/issues?q=is%3Aissue+is%3Aclosed)
    core.wait(2);
    SolarSystem.setFlagPlanets(true);
    SolarSystem.setMoonScale(5);
    SolarSystem.setFlagMoonScale(false);
    SolarSystem.setFontSize(25);
    SolarSystem.setFlagTrails(false);
    SolarSystem.setFlagOrbits(false);
    SolarSystem.setFlagLabels(false);
    StarMgr.setFontSize(20);
    StarMgr.setLabelsAmount(0);
    StelMovementMgr.setAutoMoveDuration(5);
    ConstellationMgr.setFlagLines(false);
    ConstellationMgr.setFlagLabels(false);
    ConstellationMgr.setArtIntensity(0.0);
    ConstellationMgr.setFlagArt(false);
    ConstellationMgr.setFlagBoundaries(false);
    ConstellationMgr.setConstellationLineThickness(2);
    ConstellationMgr.setFontSize(32);
    ConstellationMgr.setFlagConstellationPick(true);
    ConstellationMgr.setFlagIsolateSelected(true);
    SporadicMeteorMgr.setFlagShow(true);
    SporadicMeteorMgr.setZHR(5000);
    core.setSkyCulture("western");
    core.setGuiVisible(true);
    core.setMilkyWayVisible(true);
    core.setMilkyWayIntensity(4);
    core.setObserverLocation(param_long, param_lat, 950, 0, "Athos Centro Astronómico", "Earth");
    LandscapeMgr.setFlagAtmosphere(true);
    LandscapeMgr.setCurrentLandscapeName("Athos Centro Astronómico");
    LandscapeMgr.setFlagLandscapeUseMinimalBrightness(true);
    StelMovementMgr.setFlagEnableMouseNavigation(false);
    strings = new Strings_1.Strings().getLocalizedStrings("de_DE");
}
function intro() {
    core.setTimeRate(0);
    core.setDate("2019-08-29T21:30:00", "utc");
    var labelTitle = LabelMgr.labelScreen(strings.title, 250, 750, false, 70, "#66ccff");
    LabelMgr.setLabelShow(labelTitle, true);
    var labelSubTitle = LabelMgr.labelScreen(strings.subtitle, 250, 850, false, 40, "#66ccff");
    LabelMgr.setLabelShow(labelSubTitle, true);
    core.moveToAltAzi(20, 270);
    GoHome(15, 0, 10);
    LabelMgr.deleteAllLabels();
}
function GoHome(delay, zoomDelay, moveDelay) {
    core.output("Moving to home postion");
    StelMovementMgr.zoomTo(90, zoomDelay);
    core.moveToAltAzi(20, 175, moveDelay);
    core.wait(delay);
}
// 
// Try to undo script settings that will mess up stellariums expected opertation
//
function cleanup() {
    ConstellationMgr.setFlagIsolateSelected(false);
    ConstellationMgr.setFlagConstellationPick(false);
    ConstellationMgr.deselectConstellations();
    StelMovementMgr.setFlagEnableMouseNavigation(true);
    core.setGuiVisible(true);
    core.clear("natural");
}
//
// Custom Actions for some constellations
//
function customActionPolaris() {
    GridLinesMgr.setFlagEquatorGrid(true);
    StelMovementMgr.zoomTo(100, 2);
    core.setTimeRate(2000);
    core.wait(10);
    core.setTimeRate(60);
    GridLinesMgr.setFlagEquatorGrid(false);
}
function customActionAndromeda() {
    StelMovementMgr.zoomTo(3, 2);
    core.wait(10);
}
//
// Main script entry Point
//
function main() {
    try {
        //Helper.installDebugHooks();
        // Setup Stellarium
        setup();
        // Run Intro
        intro();
        //core.setTimeRate(60); 
        core.wait(3);
    }
    catch (exc) {
        core.output(exc);
        //Helper.showError(exc);
    }
    finally {
        cleanup();
        //Helper.removeDebugHooks();
    }
}
main();


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Creates a class for creating the german texts for this script
Object.defineProperty(exports, "__esModule", { value: true });
var Strings = /** @class */ (function () {
    function Strings() {
        this._german = {
            title: "Sternbilder des Herbstes",
            subtitle: "Himmel über Sachsen",
        };
        this._english = {
            title: "Constellations of the Autumn Sky",
            subtitle: "Northern Hemispehere",
        };
    }
    Strings.prototype.getLocalizedStrings = function (loc) {
        if (loc === void 0) { loc = ""; }
        // This function is using the localized name of the sun in order to try to determine the UI culture.
        var lang;
        if (loc) {
            lang = loc;
            core.debug('Forcing language to "' + lang + '"');
        }
        else {
            lang = core.getAppLanguage();
            core.debug('App language is "' + lang + '"');
        }
        var s;
        // Germany, Austria and Switzerland get the german strings. 		
        if (lang == "de_DE" || lang == "de_AT" || lang == "de_CH") {
            s = this._german;
        }
        // default is english
        else {
            s = this._english;
        }
        return s;
    };
    return Strings;
}());
exports.Strings = Strings;


/***/ })
/******/ ]);